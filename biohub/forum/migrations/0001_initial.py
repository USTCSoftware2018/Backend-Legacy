# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-30 11:18
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=5000)),
                ('files', models.ManyToManyField(to='files.File')),
            ],
        ),
        migrations.CreateModel(
            name='Brick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_part', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('designer', models.CharField(default='', max_length=100)),
                ('group_name', models.CharField(default='', max_length=100)),
                ('part_type', models.CharField(default='', max_length=50)),
                ('nickname', models.CharField(default='', max_length=50)),
                ('part_status', models.CharField(choices=[('Released', 'Released'), ('Released HQ', 'Released HQ'), ('Not Released', 'Not Released'), ('Discontinued', 'Discontinued')], default='Not Released', max_length=15)),
                ('sample_status', models.CharField(choices=[('Sample in Stock', 'Sample in Stock'), ("It's complicated", "It's complicated"), ('Not in Stock', 'Not in Stock'), ('Informational', 'Informational')], default='Sample in Stock', max_length=20)),
                ('experience_status', models.CharField(choices=[('works', 'works'), ('issues', 'issues'), ('fails', 'fails')], default='works', max_length=8)),
                ('use_num', models.PositiveIntegerField(default=0)),
                ('twin_num', models.PositiveIntegerField(default=0)),
                ('dna_position', models.CharField(default='', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('assembly_compatibility', models.CharField(default='', max_length=40)),
                ('parameters', models.TextField(default='')),
                ('categories', models.TextField(default='')),
                ('sequence_a', models.TextField(default='')),
                ('sequence_b', models.TextField(default='')),
                ('used_by', models.TextField(blank=True, default='')),
                ('sub_parts', models.TextField(blank=True, default='')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('document', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='forum.Article')),
                ('followers', models.ManyToManyField(related_name='bricks_from_follower', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True, default='', max_length=1000)),
                ('author_name', models.CharField(blank=True, default='', max_length=100)),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('pub_time', models.DateField(default=datetime.date(2017, 7, 30), verbose_name='publish time')),
                ('rate_score', models.DecimalField(decimal_places=1, default=0, max_digits=2)),
                ('rate_num', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='experience_set', to=settings.AUTH_USER_MODEL)),
                ('brick', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.Brick')),
                ('rate_users', models.ManyToManyField(related_name='experience_rated_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('pub_time', 'id'),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1000)),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('pub_time', models.DateTimeField(auto_now_add=True, verbose_name='publish time')),
                ('up_vote_num', models.IntegerField(default=0)),
                ('is_visible', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_set', to=settings.AUTH_USER_MODEL)),
                ('experience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='forum.Experience')),
                ('up_vote_users', models.ManyToManyField(related_name='post_voted_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['pub_time'],
            },
        ),
        migrations.CreateModel(
            name='SeqFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_type', models.CharField(default='', max_length=15)),
                ('start_loc', models.PositiveIntegerField(default=0)),
                ('end_loc', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(default='', max_length=15)),
                ('brick', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seqFeatures', to='forum.Brick')),
            ],
        ),
    ]
